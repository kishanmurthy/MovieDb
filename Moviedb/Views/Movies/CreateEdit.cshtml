@model Moviedb.Models.Movie

@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<script src="~/Scripts/chosen.jquery.js"></script>
<link href="~/Content/chosen.css" rel="stylesheet" />
<script src="~/Scripts/Form.js"></script>

@{

    if (Model == null)
    {
        <h2>New</h2>
    }
    else
    {
        <h2>Edit</h2>
    }
}
@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Movie</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ReleaseDate, "{0:dd-MM-yyyy}", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Plot, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Plot, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Plot, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProducerId, "ProducerId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProducerId", null, htmlAttributes: new { @class = "form-control", @id = "ProducersDropDown" })
                <button type="button" class="btn btn-default" data-target="#MyModalProducer" data-toggle="modal">New Producer</button>
                @Html.ValidationMessageFor(model => model.ProducerId, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Actors, "Actors", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @* ReSharper disable once UnknownCssClass *@
                <select class="actor_dropdown" multiple="multiple" name="Actors">

                    @{
                        foreach (var actor in ViewBag.Actors)
                        {



                            if (Model != null && Model.Actors.Contains(actor))
                            {
                                <option value=@actor.Id selected>@actor.Name</option>

                            }
                            else
                            {
                                <option value=@actor.Id>@actor.Name</option>
                            }
                        }
                    }
                </select>
                <button type="button" class="btn btn-default" data-target="#MyModalActor" data-toggle="modal">New Actor</button>
            </div>
        </div>

        @{

            if (Model == null)
            {

                <div class="form-group">
                    @Html.LabelFor(model => model.MoviePosterPath, "Movie Poster", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="file" name="MoviePoster" id="MoviePoster" accept="image/*" />
                    </div>
                </div>
            }
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<div class="modal glyphicon-fast-forward" id="MyModalProducer" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button class="close" data-dismiss="modal" onclick="close()">&times;</button>
                <div class="modal-body" id="ModalBodyProducer">

                    <h2>Create</h2>
                    @Html.Partial("_CreateProducer", (Object)ViewBag.NewProducer)

                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal glyphicon-fast-forward" id="MyModalActor" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button class="close" data-dismiss="modal" onclick="close()">&times;</button>
                <div class="modal-body" id="ModalBodyActor">
                    
                    <h2>Create</h2>
                    @Html.Partial("_CreateActor", (Object)ViewBag.NewActor)
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $('.actor_dropdown').chosen();
    </script>
}