@model Moviedb.Models.Movie

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Movie</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Plot, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Plot, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Plot, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProducerId, "ProducerId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ProducerId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ProducerId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Actors, "Actors", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.ListBox("Actors", new SelectList(ViewBag.Actors, "Id", "Name"), htmlAttributes: new { @id = "actor_dropdown" })*@
            
            
            <select id="actor_dropdown" multiple="multiple" name="Actors">
            
            @{ 
                foreach (var actor in ViewBag.Actors)
                {

                    if (Model.Actors.Contains(actor))
                    {
                        <option value=actor.Id selected>@actor.Name</option>

                    }
                    else
                    {
                        <option value=actor.Id>@actor.Name</option>
                        }
                    }
                }
            </select>


        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-2" for="Actors">Actors</label>
        <div class="col-md-10">
            
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-1.10.2.js"></script>
    <script src="~/Scripts/chosen.jquery.js"></script>
    <link href="~/Content/chosen.css" rel="stylesheet" />




    <script type="text/javascript">

        $('#actor_dropdown').chosen();
    </script>
}
